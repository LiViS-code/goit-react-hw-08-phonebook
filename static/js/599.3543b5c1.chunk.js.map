{"version":3,"file":"static/js/599.3543b5c1.chunk.js","mappings":"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","sources":["Pages/ContactsPage/ContactsPage.styled.js","components/Forms/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","Pages/Modal/Modal.styled.js","components/Forms/EditForm/EditForm.jsx","Pages/Modal/Modal.jsx","Pages/ContactsPage/ContactsPage.jsx","components/Forms/Forms.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../constants/Theme';\n\nconst { spacing } = theme;\n\nexport const ContactsTitle = styled.h2`\n  margin-top: 0;\n  margin-bottom: ${spacing(4)};\n  font-size: 1.4em;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n`;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { FcContacts, FcPhoneAndroid, FcAddDatabase } from \"react-icons/fc\";\nimport { Form, Label, Input, Button } from \"../Forms.styled\";\n\nexport default function ContactForm({ onChangeState }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInput = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (onChangeState(name, number) === \"success\") {\n      setNumber(\"\");\n      setName(\"\");\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"inputName\">\n        <FcContacts />\n        Name\n      </Label>\n\n      <Input\n        id=\"inputName\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Enter contact name\"\n        required\n        onChange={handleInput}\n      />\n\n      <Label htmlFor=\"inputNumber\">\n        <FcPhoneAndroid />\n        Number\n      </Label>\n\n      <Input\n        id=\"inputNumber\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        placeholder=\"Enter phone number\"\n        required\n        onChange={handleInput}\n      />\n\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add contact\n        <IconContext.Provider\n          value={{\n            size: \"1.5em\",\n            style: { verticalAlign: \"middle\", marginLeft: \"16px\" },\n          }}\n        >\n          <FcAddDatabase />\n        </IconContext.Provider>\n      </Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  onChangeState: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { theme } from '../../constants/Theme';\n\nconst {\n  spacing,\n  colors: { accentColor },\n  transition: { timing, timingFunction },\n} = theme;\n\nexport const ContastsList = styled.ul`\n  padding-left: 0;\n  list-style: none;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: ${spacing(4)};\n  }\n`;\n\nexport const ContactNote = styled.span`\n  margin-right: ${spacing(3)};\n  font-size: 0.85em;\n`;\n\nexport const Link = styled.a`\n  color: inherit;\n  text-decoration: none;\n  font-weight: 700;\n  transition: text-decoration ${timing} ${timingFunction};\n\n  &:hover,\n  &:focus {\n    color: inherit;\n    outline: 2px solid ${accentColor};\n    border-radius: 0.3em;\n    outline-offset: 0.3em;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n  padding-left: 0;\n  list-style: none;\n`;\n\nexport const ButtonsItem = styled.li`\n  &:not(:last-child) {\n    margin-right: ${spacing(2)};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { IconContext } from 'react-icons';\nimport { FcRemoveImage, FcEditImage } from 'react-icons/fc';\nimport {\n  ContastsList,\n  ContactItem,\n  ContactNote,\n  Link,\n  ButtonsList,\n  ButtonsItem,\n} from './ContactList.styled';\nimport { Button } from '../Forms/Forms.styled';\nexport default function ContactList({ contacts, filter, onDelete, toggleModal }) {\n  let filterContacts = contacts;\n\n  if (filter) {\n    filterContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter)\n    );\n  }\n\n  return (\n    <ContastsList>\n      {filterContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          <ContactNote>\n            {name}:{' '}\n            <Link href={'tel:+' + parseInt(number.replace(/\\D+/g, ''))}>\n              {number}\n            </Link>\n          </ContactNote>\n          <ButtonsList>\n            <ButtonsItem>\n              <Button\n              type=\"button\"\n              onClick={() => toggleModal(id, name, number)}\n              title=\"Edit this contact\"\n              >\n                <IconContext.Provider\n                  value={{\n                    size: '1.3em',\n                    style: { verticalAlign: 'middle' },\n                  }}\n                >\n                  <FcEditImage />\n                </IconContext.Provider>\n              </Button>\n            </ButtonsItem>\n            <ButtonsItem>\n              <Button\n                type=\"button\"\n                onClick={() => onDelete(id, name)}\n                title=\"Delete this contact\"\n                >\n                <IconContext.Provider\n                  value={{\n                    size: '1.3em',\n                    style: { verticalAlign: 'middle' },\n                  }}\n                >\n                  <FcRemoveImage />\n                </IconContext.Provider>\n              </Button>\n            </ButtonsItem>\n          </ButtonsList>\n        </ContactItem>\n      ))}\n    </ContastsList>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/Theme';\n\nconst {\n  colors: { primaryColor, backgroundColorForm, accentColor },\n  spacing,\n} = theme;\n\nexport const BarsRow = styled.div`\n  position: relative;\n`;\n\nexport const BarsCol = styled.div`\n  height: ${spacing(10)};\n`;\n\nexport const Text = styled.p`\n  color: ${primaryColor};\n  font-size: 1em;\n  text-align: center;\n  margin: 0;\n`;\n\nexport const Bars = styled.div`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: ${spacing(12)};\n  width: ${spacing(12)};\n  margin: ${spacing(-12)} 0 0 ${spacing(-7)};\n\n  @keyframes bars {\n    0% {\n      height: ${spacing(1.2)};\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      background: ${backgroundColorForm};\n    }\n    25% {\n      height: ${spacing(8)};\n      -webkit-transform: translateY(15px);\n      transform: translateY(15px);\n      -webkit-transform: translateY(15px);\n      transform: translateY(15px);\n      background: ${accentColor};\n    }\n    50% {\n      height: ${spacing(1.2)};\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      background: ${backgroundColorForm};\n    }\n    100% {\n      height: ${spacing(1.2)};\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      background: ${backgroundColorForm};\n    }\n  }\n  @-webkit-keyframes bars {\n    0% {\n      height: ${spacing(1.2)};\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      background: ${backgroundColorForm};\n    }\n    25% {\n      height: ${spacing(8)};\n      -webkit-transform: translateY(15px);\n      transform: translateY(15px);\n      background: ${accentColor};\n    }\n    50% {\n      height: ${spacing(1.2)};\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      background: ${backgroundColorForm};\n    }\n    100% {\n      height: ${spacing(1.2)};\n      -webkit-transform: translateY(0px);\n      transform: translateY(0px);\n      background: ${backgroundColorForm};\n    }\n  }\n`;\n\nexport const Bar = styled.span`\n  position: absolute;\n  display: block;\n  bottom: ${spacing(2.5)};\n  width: ${spacing(2.3)};\n  height: ${spacing(1.2)};\n  background: ${backgroundColorForm};\n  -webkit-animation: bars 1.5s infinite ease-in-out;\n  animation: bars 1.5s infinite ease-in-out;\n\n  &:nth-child(2) {\n    left: ${spacing(2.75)};\n    -webkit-animation-delay: 0.2s;\n    animation-delay: 0.2s;\n  }\n\n  &:nth-child(2) {\n    left: ${spacing(2.75)};\n    -webkit-animation-delay: 0.2s;\n    animation-delay: 0.2s;\n  }\n\n  &:nth-child(3) {\n    left: ${spacing(5.5)};\n    -webkit-animation-delay: 0.4s;\n    animation-delay: 0.4s;\n  }\n\n  &:nth-child(4) {\n    left: ${spacing(8.25)};\n    -webkit-animation-delay: 0.6s;\n    animation-delay: 0.6s;\n  }\n\n  &:nth-child(5) {\n    left: ${spacing(11)};\n    -webkit-animation-delay: 0.8s;\n    animation-delay: 0.8s;\n  }\n`;\n","import { BarsRow, BarsCol, Bars, Bar, Text } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <BarsRow>\n      <BarsCol>\n        <Bars>\n          <Bar></Bar>\n          <Bar></Bar>\n          <Bar></Bar>\n          <Bar></Bar>\n          <Bar></Bar>\n        </Bars>\n      </BarsCol>\n      <Text>Loading...</Text>\n    </BarsRow>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import PropTypes from \"prop-types\";\nimport { FcFilledFilter } from \"react-icons/fc\";\nimport { Container } from \"./Filter.styled\";\nimport { Input, Label } from \"../Forms/Forms.styled\";\n\nexport default function Filter({ onFilter, filter }) {\n  const handleInput = (e) => {\n    onFilter(e.target.value);\n  };\n\n  return (\n    <Container>\n      <Label htmlFor=\"inputFilter\">\n        <FcFilledFilter />\n        Find contacts by name\n      </Label>\n      <Input\n        id=\"inputFilter\"\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleInput}\n      ></Input>\n    </Container>\n  );\n}\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { theme } from '../../constants/Theme';\n\nconst {\n  colors: { overlayColor },\n} = theme;\n\nexport const Modal = styled.div`\n  max-width: calc(100vw - 200px);\n  max-height: calc(100vh - 50px);\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${overlayColor};\n  z-index: 5;\n`;\n","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button, ButtonList, ButtonListItem } from \"components/Forms/Forms.styled\";\n\nexport default function EditForm({ contactEdit, onSaveEdit, toggleModal }) {\n  const [name, setName] = useState(contactEdit.name);\n  const [number, setNumber] = useState(contactEdit.number);\n\n  const handleInput = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    onSaveEdit(contactEdit.id, name, number);\n  };\n\n  const onHandleCancel = () => {\n    toggleModal();\n  }\n\n  return (\n    <Form>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleInput}>\n      </Input>    \n  \n      <Label htmlFor=\"number\">Phone number</Label>\n      <Input type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              value={number}\n              onChange={handleInput}>\n      </Input>\n      \n      <ButtonList>\n        <ButtonListItem><Button type=\"submit\" onClick={onHandleSubmit}>Save Changes</Button></ButtonListItem>\n\n        <ButtonListItem><Button type=\"button\" data-action=\"cancel\" onClick={onHandleCancel}>Cancel</Button></ButtonListItem>\n      </ButtonList>\n          </Form>\n  )\n}\n\nEditForm.propTypes = {\n  contactEdit: PropTypes.object.isRequired,\n  onSaveEdit: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport { Overlay, Modal } from \"./Modal.styled\";\nimport EditForm from \"components/Forms/EditForm/EditForm\";\n\nexport default function ModalWindow({contactEdit, onSaveEdit, toggleModal}) {\n\n  const closeModal = (e) => {\n    if (e.target.tagName === \"DIV\") {\n      toggleModal();\n    }\n  }\n\n  return (\n    <Overlay onClick={closeModal}>\n      <Modal>\n        <EditForm contactEdit={contactEdit} onSaveEdit={onSaveEdit} toggleModal={toggleModal} />\n      </Modal>\n    </Overlay>\n  );\n}\n\nModalWindow.propTypes = {\n  contactEdit: PropTypes.object.isRequired,\n  onSaveEdit: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n}","import { useEffect, useState } from \"react\";\nimport { ContactsTitle, Message } from \"./ContactsPage.styled\";\nimport ContactForm from 'components/Forms/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport Filter from 'components/Filter/Filter';\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { addNewContact, fetchContacts, deleteContact, editContact } from \"redux/asyncThunks\";\nimport toastMsg from \"utils/toastMsg\";\nimport { setFilter } from 'redux/slices/contactSlices';\nimport ModalWindow from \"Pages/Modal/Modal\";\n\n\nexport default function ContactsPage() {\n\n  const [showModal, setShowModal] = useState(\"false\");\n  const [contactEdit, setContactEdit] = useState({});\n\n  const dispatch = useDispatch();\n\n  const { contacts, loading, filter } = useSelector(\n    state => state.phonebook,\n    shallowEqual\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onContactsGroup = contacts.length !== 0 ? true : false;\n  const onContactsFilter = contacts.length >= 2 ? true : false;\n\n  const onChangeState = (name, number) => {\n    if (matchCheckName(name, contacts)) {\n      toastMsg(name, 'warn');\n      return 'not success';\n    }\n\n    dispatch(addNewContact({ name, number }));\n\n    toastMsg(name, 'success');\n\n    return 'success';\n  };\n\n  const matchCheckName = (name, contacts) => {\n    for (let i = 0; i < contacts.length; i += 1) {\n      if (contacts[i].name === name) return true;\n    }\n    return false;\n  };\n\n  const onDelete = (id, name) => {\n    dispatch(deleteContact(id));\n\n    toastMsg(name, 'info');\n\n    if (contacts.length <= 2) {\n      onFilter('');\n    }\n  };\n\n  const onFilter = word => {\n    dispatch(setFilter(word));\n  };\n\n  const onSaveEdit = (id, name, number) => {\n    dispatch(editContact({id, name, number}));\n    setShowModal(showModal => !showModal);\n  }\n\n  const toggleModal = (id=null, name=null, number=null) => {\n    setContactEdit({ id, name, number });\n    setShowModal(showModal => !showModal);\n  }\n\n  return (\n    <>\n      <ContactForm onChangeState={onChangeState} />\n      {loading ? (\n        <Loader />\n      ) : (\n    <>\n      {onContactsGroup ? (\n        <>\n          <ContactsTitle>Contacts</ContactsTitle>\n          {onContactsFilter && (\n            <Filter onFilter={onFilter} filter={filter} />\n          )}\n          <ContactList\n            contacts={contacts}\n            filter={filter}\n                  onDelete={onDelete}\n                  toggleModal={toggleModal}\n          />\n        </>\n      ) : (\n        <Message>You have no saved contacts</Message>\n      )}\n    </>\n      )}\n      {!showModal && <ModalWindow contactEdit={contactEdit} onSaveEdit={onSaveEdit} toggleModal={toggleModal}/> }\n</>\n  )\n};\n","import styled from 'styled-components';\nimport { theme } from '../../constants/Theme';\n\nconst {\n  colors: {\n    primaryColor,\n    reverseColor,\n    backgroundColorForm,\n    outlineColor,\n    borderDisabledColor,\n    backgroundDisabledColor,\n    disabledColor,\n  },\n  transition: { timing, timingFunction },\n  spacing,\n} = theme;\n\nexport const Form = styled.form`\n  min-width: 200px;\n  max-width: 400px;\n  margin: 0 auto ${spacing(4)};\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: ${spacing(5)};\n  border: 1px solid ${primaryColor};\n  border-radius: ${spacing(2)};\n  background-color: ${backgroundColorForm}; ;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: ${spacing(1)};\n`;\n\nexport const Input = styled.input`\n  padding: ${spacing(2)} ${spacing(3)};\n  margin-bottom: ${spacing(4)};\n  border: none;\n  border-radius: ${spacing(2)};\n  transition: outline ${timing} ${timingFunction};\n\n  &[name='number'] {\n    margin-bottom: ${spacing(8)};\n  }\n\n  &:hover,\n  &:focus {\n    outline: 2px solid ${outlineColor};\n  }\n`;\n\nexport const Button = styled.button`\n  padding: ${spacing(1)} ${spacing(2)};\n  border: none;\n  border-radius: ${spacing(2)};\n  color: inherit;\n  outline: 1px solid ${primaryColor};\n  transition: color ${timing} ${timingFunction},\n    background-color ${timing} ${timingFunction};\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    color: ${reverseColor};\n    background-color: ${primaryColor};\n  }\n\n  &:disabled,\n  &[disabled] {\n    cursor: auto;\n    border: 1px solid ${borderDisabledColor};\n    background-color: ${backgroundDisabledColor};\n    color: ${disabledColor};\n  }\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  padding-left: 0;\n  margin-top: 0;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const ButtonListItem = styled.li`\n  &:not(:last-child) {\n    margin-right: ${spacing(4)};\n  }\n`;\n"],"names":["spacing","theme","ContactsTitle","styled","Message","ContactForm","onChangeState","useState","name","setName","number","setNumber","handleInput","e","target","value","onSubmit","preventDefault","htmlFor","id","type","pattern","title","placeholder","required","onChange","disabled","size","style","verticalAlign","marginLeft","accentColor","timing","timingFunction","ContastsList","ContactItem","ContactNote","Link","ButtonsList","ButtonsItem","ContactList","contacts","filter","onDelete","toggleModal","filterContacts","toLowerCase","includes","map","href","parseInt","replace","onClick","primaryColor","backgroundColorForm","BarsRow","BarsCol","Text","Bars","Bar","Loader","Container","Filter","onFilter","overlayColor","Modal","Overlay","EditForm","contactEdit","onSaveEdit","ModalWindow","tagName","ContactsPage","showModal","setShowModal","setContactEdit","dispatch","useDispatch","useSelector","state","phonebook","shallowEqual","loading","useEffect","fetchContacts","onContactsGroup","length","onContactsFilter","matchCheckName","i","word","setFilter","toastMsg","addNewContact","deleteContact","editContact","reverseColor","outlineColor","borderDisabledColor","backgroundDisabledColor","disabledColor","Form","Label","Input","Button","ButtonList","ButtonListItem"],"sourceRoot":""}